# Generated by Django 5.0.3 on 2024-03-31 18:59

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0013_remove_structureunit_department_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DepartmentName',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Department name',
                'verbose_name_plural': 'Department names',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PositionName',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Position name',
                'verbose_name_plural': 'Position names',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('name', models.CharField(max_length=255, verbose_name='Shift Name')),
                ('schedule', models.CharField(max_length=100, verbose_name='Shift Schedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('employee_type', models.CharField(choices=[('full_time', 'Полная занятость'), ('part_time', 'Частичная занятость'), ('project', 'Проектная работа'), ('internship', 'Стажировка'), ('volunteering', 'Волонтерство'), ('civil_contract', 'Договор гражданско-правового характера'), ('other', 'Другое')], default='full_time', max_length=20, verbose_name='Employment type')),
                ('active_from', models.DateField(verbose_name='Active from')),
                ('active_to', models.DateField(blank=True, null=True, verbose_name='Active to')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('date', models.DateTimeField(verbose_name='Event date')),
                ('type', models.CharField(choices=[('day_off', 'Отгул'), ('vacation', 'Отпуск'), ('sick_leave', 'Больничный'), ('business_trip', 'Командировка'), ('coming', 'Прибытие'), ('leaving', 'Убытие'), ('coming_hr', 'Прибытие [HR]'), ('leaving_hr', 'Убытие [HR]'), ('other', 'Другое')], max_length=100, verbose_name='Event type')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('application_status', models.CharField(choices=[('for_consideration', ' На рассмотрений'), ('approved', 'Одобрено'), ('canceled', 'Отменено')], default=' На рассмотрений', max_length=100, verbose_name='Status')),
                ('employee', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='application', to='organizations.employee', verbose_name='Employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('event_type', models.CharField(choices=[('day_off', 'Отгул'), ('vacation', 'Отпуск'), ('sick_leave', 'Больничный'), ('business_trip', 'Командировка'), ('coming', 'Прибытие'), ('leaving', 'Убытие'), ('coming_hr', 'Прибытие [HR]'), ('leaving_hr', 'Убытие [HR]'), ('other', 'Другое')], max_length=100, verbose_name='Event type')),
                ('event_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Event start date')),
                ('event_note', models.TextField(blank=True, null=True, verbose_name='Event note')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='organizations.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Employee event',
                'verbose_name_plural': 'Employee events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('bin', models.CharField(max_length=12, verbose_name='BIN')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='organizations.organization', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.CreateModel(
            name='StructureUnit',
            fields=[
                ('tn_ancestors_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks')),
                ('tn_ancestors_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count')),
                ('tn_children_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Children pks')),
                ('tn_children_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count')),
                ('tn_depth', models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('tn_descendants_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks')),
                ('tn_descendants_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count')),
                ('tn_index', models.PositiveIntegerField(default=0, editable=False, verbose_name='Index')),
                ('tn_level', models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level')),
                ('tn_priority', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority')),
                ('tn_order', models.PositiveIntegerField(default=0, editable=False, verbose_name='Order')),
                ('tn_siblings_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks')),
                ('tn_siblings_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID identification')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('type', models.CharField(choices=[('organization', 'Организация'), ('department', 'Отдел'), ('division', 'Подразделение'), ('section', 'Секция'), ('branch', 'Филиал'), ('office', 'Офис'), ('position', 'Должность'), ('other', 'Другое')], default='department', max_length=20, verbose_name='Type')),
                ('is_department_leader', models.BooleanField(default=False, verbose_name='Is department leader')),
                ('department_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='structure_units', to='organizations.departmentname', verbose_name='Department name')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='structure_units', to='organizations.organization', verbose_name='Organization')),
                ('position_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='structure_units', to='organizations.positionname', verbose_name='Position name')),
                ('tn_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='organizations.structureunit', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Structure unit',
                'verbose_name_plural': 'Structure units',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='structure_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.structureunit', verbose_name='Structure unit'),
        ),
        migrations.CreateModel(
            name='EmployeePosition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Changed_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID identification')),
                ('work_schedule_type', models.CharField(choices=[('full_day', 'Полный день'), ('shift', 'Сменный график'), ('flexible', 'Гибкий график'), ('remote', 'Удаленная работа'), ('fly_in_fly_out', 'Вахтовый метод'), ('rotation', 'Ротация'), ('other', 'Другое')], default='full_day', max_length=20, verbose_name='Work schedule type')),
                ('active_from', models.DateField(verbose_name='Active from')),
                ('active_to', models.DateField(blank=True, null=True, verbose_name='Active to')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='organizations.employee', verbose_name='Employee')),
                ('work_shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.workshift', verbose_name='Work shift')),
            ],
            options={
                'verbose_name': 'Employee position',
                'verbose_name_plural': 'Employee positions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='work_shift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_shift', to='organizations.workshift', verbose_name='Work shift'),
        ),
    ]
